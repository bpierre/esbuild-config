# Greatly inspired from
# https://github.com/paskausks/rust-bin-github-workflows/blob/894a4f2debade42f8d7b5b95f493eaa33fdeb81b/.github/workflows/release.yml

name: Create release

on:
  push:
    tags:
      - 'v*'

env:
  RELEASE_BIN: esbuild-config
  RELEASE_ADDS: README.md LICENSE
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux, macos, windows]
        include:
          - build: linux
            os: ubuntu-latest
            rust: stable
          - build: macos
            os: macos-latest
            rust: stable
          - build: windows
            os: windows-latest
            rust: stable

    steps:
      - uses: actions/checkout@v2

      - name: Install Rust (rustup)
        run: rustup update ${{ matrix.rust }} --no-self-update && rustup default ${{ matrix.rust }}
        shell: bash

      - name: macOS build
        run: |
          rustup target add x86_64-apple-darwin
          rustup target add aarch64-apple-darwin
          SDKROOT=$(xcrun -sdk macosx --show-sdk-path) cargo build --target=x86_64-apple-darwin --verbose --release
          SDKROOT=$(xcrun -sdk macosx --show-sdk-path) cargo build --target=aarch64-apple-darwin --verbose --release
          mkdir -p ./target/release
          lipo -create ./target/x86_64-apple-darwin/release/${{ env.RELEASE_BIN }} ./target/aarch64-apple-darwin/release/${{ env.RELEASE_BIN }} -output ./target/release/${{ env.RELEASE_BIN }}
        if: matrix.os == 'macos-latest'

      - name: Linux + Windows build
        run: cargo build --verbose --release
        if: matrix.os != 'macos-latest'

      - name: Create artifact directory
        run: mkdir artifacts

      - name: Create archive for Linux
        run: 7z a -ttar -so -an ./target/release/${{ env.RELEASE_BIN }} ${{ env.RELEASE_ADDS }} | 7z a -si ./artifacts/${{ env.RELEASE_BIN }}-linux-x86_64.tar.gz
        if: matrix.os == 'ubuntu-latest'

      - name: Create archive for Windows
        run: |
          7z a ./tmp/${{ env.RELEASE_BIN }}-windows-x86_64.tar ./target/release/${{ env.RELEASE_BIN }}.exe ${{ env.RELEASE_ADDS }}
          7z a ./artifacts/${{ env.RELEASE_BIN }}-windows-x86_64.tar.gz ./tmp/${{ env.RELEASE_BIN }}-windows-x86_64.tar
        if: matrix.os == 'windows-latest'

      - name: Install p7zip
        # 7Zip not available on MacOS, install p7zip via homebrew.
        run: brew install p7zip
        if: matrix.os == 'macos-latest'

      - name: Create archive for MacOS
        run: 7z a -ttar -so -an ./target/release/${{ env.RELEASE_BIN }} ${{ env.RELEASE_ADDS }} | 7z a -si ./artifacts/${{ env.RELEASE_BIN }}-macos-x86_64.tar.gz
        if: matrix.os == 'macos-latest'

      # This will double-zip
      # See - https://github.com/actions/upload-artifact/issues/39
      - uses: actions/upload-artifact@v1
        name: Upload archive
        with:
          name: ${{ runner.os }}
          path: artifacts/
